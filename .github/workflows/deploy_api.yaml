name: Deploy API
on:
  push:
    branches: [ master ]
    paths:
      - 'api/**'

jobs:
  deploy:
    name: Build & Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: imjasonh/setup-ko@v0.6


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          aws-access-key-id:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1


      - name: Build, tag, and push image to Amazon ECR
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/n6v3i0y3
          cd api
          export KO_DOCKER_REPO=ko.local
          image=$(ko publish -B .) 
          docker tag $image public.ecr.aws/n6v3i0y3/emrekasgur.com-backend:${{ github.sha }}
          docker push public.ecr.aws/n6v3i0y3/emrekasgur.com-backend:${{ github.sha }}

      - name: Deploy to EC2
        env: 
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          HOSTNAME: ${{ secrets.HOSTNAME }}
          USERNAME: ${{ secrets.USERNAME }}
        run: |
          echo "$PRIVATE_KEY" > private_key
          chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USERNAME}@${HOSTNAME} '
            sudo su
            sudo docker ps -q | xargs -r docker stop && docker ps -aq | xargs -r docker rm
            sudo docker images -q | xargs -r docker rmi
            sudo docker pull public.ecr.aws/n6v3i0y3/emrekasgur.com-backend:${{ github.sha }}
            sudo docker run -d --name ${{ github.sha }} -p 80:80 --env-file=.env public.ecr.aws/n6v3i0y3/emrekasgur.com-backend:${{ github.sha }}
          '
        